/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.zipek.minicloud.forms;

import cz.zipek.minicloud.Settings;
import cz.zipek.minicloud.sync.SyncFolder;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Kamen
 */
public class SyncFolderFrame extends javax.swing.JFrame {
	private SyncFolder folder;
	
	/**
	 * Creates new form SyncFolderFrame
	 * @param folder
	 */
	public SyncFolderFrame(SyncFolder folder) {
		initComponents();
		
		setFolder(folder);
	}
	
	public final void setFolder(SyncFolder folder) {
		this.folder = folder;
		if (folder == null) {
			textRemote.setText("");
			textLocal.setText("");
			textRegexp.setText("");
			textMaxSize.setText("");
			buttonSync.setVisible(false);
		} else {
			textRemote.setText(folder.getRemote());
			textLocal.setText(folder.getLocal().getAbsolutePath());
			textRegexp.setText("");
			textMaxSize.setText("");
			buttonSync.setVisible(false);
		}
	}
	
	private Pattern validateRegex() {
		try {
		   return Pattern.compile(textRegexp.getText());
		} catch (PatternSyntaxException exception) {
		   JOptionPane.showMessageDialog(this, "Regular expression is invalid:\n" + exception.getDescription(), "Invalid", JOptionPane.ERROR_MESSAGE);
		}
		return null;
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        textLocal = new javax.swing.JTextField();
        buttonPick = new javax.swing.JButton();
        textRemote = new javax.swing.JTextField();
        buttonSave = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        buttonSync = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        textMaxSize = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textRegexp = new javax.swing.JTextArea();
        buttonValidate = new javax.swing.JButton();

        setTitle("Synchronized folder");
        setMinimumSize(getPreferredSize());

        jLabel1.setText("Local folder:");

        jLabel2.setText("Remote folder:");

        buttonPick.setText("...");
        buttonPick.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonPickActionPerformed(evt);
            }
        });

        buttonSave.setText("Save");
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        buttonSync.setText("Synchronize");
        buttonSync.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSyncActionPerformed(evt);
            }
        });

        jLabel3.setText("Max file size");

        jLabel4.setText("bytes");

        jLabel5.setText("0 or empty for unlimited");

        jLabel6.setText("Regular expression for ignore:");

        textRegexp.setColumns(20);
        textRegexp.setRows(5);
        jScrollPane1.setViewportView(textRegexp);

        buttonValidate.setText("Validate");
        buttonValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonValidateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(buttonSync)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 289, Short.MAX_VALUE)
                        .addComponent(buttonSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonCancel))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textLocal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonPick))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(textMaxSize)
                                .addGap(10, 10, 10)
                                .addComponent(jLabel4))
                            .addComponent(textRemote)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonValidate)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonPick))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(textRemote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textMaxSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(buttonValidate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSave)
                    .addComponent(buttonCancel)
                    .addComponent(buttonSync))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonValidateActionPerformed
		if (validateRegex() != null) {
			JOptionPane.showMessageDialog(this, "Regular expression seems to be valid.", "OK", JOptionPane.INFORMATION_MESSAGE);
		}
    }//GEN-LAST:event_buttonValidateActionPerformed

    private void buttonSyncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSyncActionPerformed

    }//GEN-LAST:event_buttonSyncActionPerformed

    private void buttonPickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonPickActionPerformed
		JFileChooser chooser = new JFileChooser(); 
		chooser.setCurrentDirectory(new java.io.File("."));
		chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
		chooser.setMultiSelectionEnabled(false);
		chooser.setAcceptAllFileFilterUsed(false);
		if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) { 
			textLocal.setText(chooser.getSelectedFile().getAbsolutePath());
		}
    }//GEN-LAST:event_buttonPickActionPerformed

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
		File loc = new File(textLocal.getText());
		long maxSize = 0;
		
		if (textLocal.getText().isEmpty()) {
			JOptionPane.showMessageDialog(this, "Please enter local path", "Not a path", JOptionPane.ERROR_MESSAGE);
			return;
		}
		
		if (textRemote.getText().isEmpty()) {
			JOptionPane.showMessageDialog(this, "Please enter remote path", "Not a path", JOptionPane.ERROR_MESSAGE);
			return;
		}
		
		if (!loc.exists()) {
			if (JOptionPane.showConfirmDialog(this, "Selected local path doesn't exists. Continue anyway?", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.NO_OPTION) {
				return;
			}
		}
		
		if (!textMaxSize.getText().isEmpty()) {
			try {
				maxSize = Long.parseLong(textMaxSize.getText());
			} catch (NumberFormatException ex) {
				Logger.getLogger(SyncFolderFrame.class.getName()).log(Level.SEVERE, null, ex);
				JOptionPane.showMessageDialog(this, "Max size must be number.", "Not a number", JOptionPane.ERROR_MESSAGE);
				return;
			}
		}
		
		Pattern regexp = validateRegex();
		if (regexp == null)
			return;
		
		if (folder != null) {
			folder.setLocal(loc);
			folder.setRemote(textRemote.getText());
			folder.setRegexp(regexp);
			folder.setMaxSize(maxSize);
			Settings.syncFolderModified(folder);
		} else {
			folder = new SyncFolder(loc, textRemote.getText(), maxSize, regexp, null);
			Settings.add(folder);
		}
		setVisible(false);
    }//GEN-LAST:event_buttonSaveActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
		setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonPick;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonSync;
    private javax.swing.JButton buttonValidate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField textLocal;
    private javax.swing.JTextField textMaxSize;
    private javax.swing.JTextArea textRegexp;
    private javax.swing.JTextField textRemote;
    // End of variables declaration//GEN-END:variables
}
